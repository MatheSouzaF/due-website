"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkboilerplate"] = self["webpackChunkboilerplate"] || []).push([["assets_src_js_base_invista_js"],{

/***/ "./assets/src/js/base/invista.js":
/*!***************************************!*\
  !*** ./assets/src/js/base/invista.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initInvista: () => (/* binding */ initInvista)\n/* harmony export */ });\nfunction swiperInvista() {\n  var swiper = new Swiper('.swiper-container', {\n    slidesPerView: 1.05,\n    spaceBetween: 16,\n    draggable: true,\n    breakpoints: {\n      767: {\n        slidesPerView: 3.4\n      }\n    },\n    navigation: {\n      nextEl: '.swiper-btn-next',\n      prevEl: '.swiper-btn-prev'\n    }\n  });\n}\nfunction hoverCard() {\n  $('.card-invista').hover(function () {\n    $(this).addClass('hover-invista');\n    var items = $(this).find('.item-invista-hover');\n    items.each(function (index) {\n      $(this).delay(150 * index).queue(function (next) {\n        $(this).addClass('visible');\n        next();\n      });\n    });\n  }, function () {\n    $(this).removeClass('hover-invista');\n    var items = $(this).find('.item-invista-hover');\n    items.clearQueue().removeClass('visible');\n  });\n}\nfunction animationCards() {\n  gsap.registerPlugin(ScrollTrigger);\n  var cardsInvista = document.querySelectorAll('.card-invista');\n  function pathCard() {\n    cardsInvista.forEach(function (card, i) {\n      gsap.to(card, {\n        delay: i * 0.3,\n        duration: 1.5,\n        ease: \"power2.out\",\n        // Adiciona um easer para suavizar a animação\n        onStart: function onStart() {\n          return card.classList.add('clipPath-invista');\n        }\n      });\n    });\n  }\n  gsap.from('.invista', {\n    scrollTrigger: {\n      trigger: '.invista',\n      ease: \"power2.out\",\n      // Adiciona um easer para suavizar a \n      start: 'top-=500',\n      onEnter: pathCard\n    }\n  });\n}\nfunction initInvista() {\n  swiperInvista();\n  hoverCard();\n  animationCards();\n}\n\n\n//# sourceURL=webpack://boilerplate/./assets/src/js/base/invista.js?");

/***/ })

}]);